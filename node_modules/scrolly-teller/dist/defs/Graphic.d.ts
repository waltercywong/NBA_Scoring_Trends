import { Observable, BehaviorSubject, Subscription } from "rxjs";
export declare const log: (...args: any[]) => <T>(data: T) => T;
export declare type SceneActivationParams = {
    resize$: Observable<Window>;
    screenHeight$: BehaviorSubject<number>;
    fallback$: BehaviorSubject<boolean>;
    progress$: Observable<number>;
    progressDebounceMilli?: number;
    id: string;
};
export declare type SceneMountParams = {
    vizPlate: HTMLDivElement;
};
export interface TextItem {
    elType: string;
    text: string;
    screens: number;
}
export interface iScene {
    screenLengths: number;
    graphicContainer: HTMLDivElement;
    text: TextItem[];
    activate(params: SceneActivationParams): Subscription[];
    deactivate(subs: Subscription[]): void;
    mount(params: SceneMountParams): void;
}
export declare type GraphicParams = {
    scenes: {
        [id: string]: iScene;
    };
    sceneOrder: string[];
    mountPoint: string;
    debug?: boolean;
    sceneBuffer?: number;
    hiddenClass?: string;
    isMobile?: boolean;
};
export declare type ActiveStep = {
    el: HTMLDivElement;
    screenLengthPos: number;
};
export declare class Graphic {
    private scenes;
    private sceneOrder;
    private resize$;
    private screenHeight$;
    private fallback$;
    private scrollPos$;
    private headerBuffer;
    private totalScreenLengths;
    private vizPlate;
    private textPlate;
    private sceneBuffer;
    private steps;
    private activeSteps;
    private isMobile;
    private isMounted;
    private hiddenClass;
    private mountPoint;
    private anchorPos$;
    private initialHeight;
    private cancelOnUnmount;
    constructor({ scenes, sceneOrder, debug, mountPoint, sceneBuffer, hiddenClass, isMobile }: GraphicParams);
    setFallback(v: boolean): void;
    mount(): void;
    unmount(): void;
    private attachText;
    private adjustStepheight;
    private activateAllScenes;
    private attachSceneContainers;
    private listenResize;
    private initializePlateStyles;
    private static isKonamiCode;
}
